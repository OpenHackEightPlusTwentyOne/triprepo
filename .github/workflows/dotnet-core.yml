name: .NET Core

on:
  push:
    branches: [ master ]
    paths: 
    - apis/poi/** 
    - .github/workflows/dotnet-core.yml
  pull_request:
    branches: [ master ]
    paths:    
    - apis/poi/** 
    - .github/workflows/dotnet-core.yml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1
    - name: Install dependencies
      run: dotnet restore ./apis/poi/
#      working-directory: /apis/poi/  
    - name: Build
      run: dotnet build --configuration Release --no-restore ./apis/poi/web
    - name: Test
      run: dotnet test --no-restore --verbosity normal ./apis/poi/tests/UnitTests
      
  deploy: 
   runs-on: ubuntu-latest
   needs: build
   if: github.ref == 'refs/heads/master'
   steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1
    - name: Install dependencies
      run: dotnet restore ./apis/poi/
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.JB_AZURE_CREDENTIALS }}
 
    - name: 'Build and push image'      
      uses: azure/docker-login@v1 
      with:
        login-server: ${{ secrets.JB_REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.JB_REGISTRY_USERNAME }}
        password: ${{ secrets.JB_REGISTRY_PASSWORD }}    
      
    - name: 'Build and push part 2'
      run: |
        docker build apis/poi/web/. -t openhackrj195ck7acr.azurecr.io/devopsoh/api-poi:${{ github.run_id }}
        docker push openhackrj195ck7acr.azurecr.io/devopsoh/api-poi:${{ github.run_id }}
        
    - name: 'Deploy to Staging Task'    
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'openhackrj195ck7poi'
        publish-profile: ${{ secrets.POI_STG_PUBLISH }}
        images: openhackrj195ck7acr.azurecr.io/devopsoh/api-poi:${{ github.run_id }}
### The following code validates the staging slot (healthcheck) ####
  testandswap:
   runs-on: ubuntu-latest
   needs: 
    - build
    - deploy
   if: github.ref == 'refs/heads/master'
   steps:
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.JB_AZURE_CREDENTIALS }}
    - name: POI Healthcheck
      id: poi-health-check
      uses: satak/webrequest-action@master
      with:
        url: https://openhackrj195ck7poi-staging.azurewebsites.net/api/healthcheck/poi
        method: GET
    - name: Check the health POI API
      shell: pwsh
      run: |
       $output = '${{ steps.poi-health-check.outputs.output }}' | ConvertFrom-Json
       Write-Host " Status code is $($output.statusCode) "
       if($($output.statusCode) -eq 200) {
       Write-host "Healthy"
       Switch-AzWebAppSlot -SourceSlotName "openhackrj195ck7poi-staging" -DestinationSlotName "openhackrj195ck7poi" -ResourceGroupName "openhackrj195ck7rg" -Name "openhackrj195ck7poi"
       }
       else {
       Write-Error "POI API is not healthy"
       }


